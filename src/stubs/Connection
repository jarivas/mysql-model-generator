<?php declare(strict_types=1);

namespace {{namespace}};

use Exception;
use PDO;

class Connection {
    private $host = 'localhost';
    private $dbname = 'world';
    private $username = 'mysqlUser';
    private $password = 'mysqlP455w0rd';
    private $db = null;
    private static $instance = null;

    public static function getInstance() : ?Connection
    {
        if (self::$instance == null) self::$instance = new self();

        return self::$instance;
    }

    private function __construct()
    {
        $this->db = new PDO("mysql:host={$this->host};dbname={$this->dbname}", $this->username, $this->password);
    }

    public function get(string $sql, ?array $params, string $className)
    {
        $stmt = $this->db->prepare($sql);
        
        if ($stmt->execute($params)) {
            return $stmt->fetchAll(PDO::FETCH_CLASS, $className);
        } else {
            throw new Exception(implode(', ', $stmt->errorInfo()));
        }
    }

    public function executeSql(string $sql, ?array $params = null)
    {
        $stmt = $this->db->prepare($sql);

        if (!$stmt->execute($params)) {
            throw new Exception(implode(', ', $stmt->errorInfo()));
        }
    }

    public function lastInsertId(): ?string
    {
        return $this->db->lastInsertId();
    }
}